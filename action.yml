name: mermaid-markdown-wrap
description: Wrap .mmd Mermaid files with ```mermaid``` code blocks in Markdown
author: Suguru Takahashi
branding:
  icon: file-text
  color: purple

################################
# Input definitions - Matching CLI options
################################
inputs:
  # Required: Conversion target
  input:
    description: "File path or glob pattern for .mmd/.mermaid files (e.g. 'diagram.mmd', 'src/**/*.{mmd,mermaid}')"
    required: true

  # Basic output settings
  # -o, --out-dir
  out-dir:
    description: "Output directory"
    required: false

  # Content modification
  # --header
  header:
    description: "Header text to prepend"
    required: false
    
  # --footer
  footer:
    description: "Footer text to append"
    required: false

  # Configuration file settings
  # -c, --config
  config:
    description: "Config file path"
    required: false

  # Behavior control
  # --remove-source
  remove-source:
    description: "Remove original .mmd files after conversion (true/false)"
    required: false
    default: "false"

  # --no-show-command (inverted logic)
  show-command:
    description: "Show the command used in the output (true/false)"
    required: false
    default: "true"

####################
# Run steps
####################
runs:
  using: "composite"
  steps:
    - id: run
      shell: bash
      run: |
        # Build CLI arguments ----------------------------------------
        args=()

        # 1) Required parameter
        args+=("${{ inputs.input }}")

        # 2) Options (add if they exist)
        [[ -n "${{ inputs.out-dir }}"     ]] && args+=(--out-dir "${{ inputs.out-dir }}")
        [[ -n "${{ inputs.header }}"      ]] && args+=(--header "${{ inputs.header }}")
        [[ -n "${{ inputs.footer }}"      ]] && args+=(--footer "${{ inputs.footer }}")
        [[ -n "${{ inputs.config }}"      ]] && args+=(--config "${{ inputs.config }}")

        # 3) Boolean values require string comparison
        [[ "${{ inputs.remove-source }}"  == "true" ]] && args+=(--remove-source)
        [[ "${{ inputs.show-command }}" == "false" ]] && args+=(--no-show-command)

        # 4) Execute (always get latest CLI)
        npx --yes mermaid-markdown-wrap "${args[@]}"