name: mermaid-markdown-wrap
description: Wrap .mmd Mermaid files with ```mermaid``` code blocks in Markdown
author: Suguru Takahashi
branding:
  icon: file-text
  color: purple

################################
# Input definitions - Matching CLI options
################################
inputs:
  # Required: Conversion target
  input:
    description: "File path or glob pattern for .mmd/.mermaid files (e.g. 'diagram.mmd', 'src/**/*.{mmd,mermaid}')"
    required: true

  # Basic output settings
  # -o, --out-dir
  out-dir:
    description: "Output directory"
    required: false

  # Content modification
  # --header
  header:
    description: "Header text to prepend"
    required: false
    
  # --footer
  footer:
    description: "Footer text to append"
    required: false

  # Configuration file settings
  # -c, --config
  config:
    description: "Config file path"
    required: false

  # Behavior control
  # --remove-source
  remove-source:
    description: "Remove original .mmd files after conversion (true/false)"
    required: false
    default: "false"

  # --no-show-command (inverted logic)
  show-command:
    description: "Show the command used in the output (true/false)"
    required: false
    default: "true"

  # GitHub Actions specific options
  # --pr-comment-mode
  pr-comment-mode:
    description: "PR comment mode: 'off' (no comments), 'changed' (only for changed source files), or 'all' (all files generated in this run)"
    required: false
    default: "off"

####################
# Run steps
####################
runs:
  using: "composite"
  steps:
    # Install dependencies for PR comment feature if needed
    - name: Setup Node.js
      if: ${{ inputs.pr-comment-mode != 'off' }}
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install GitHub Actions dependencies
      if: ${{ inputs.pr-comment-mode != 'off' }}
      shell: bash
      run: |
        npm install @actions/github @actions/core
    
    - name: Run mermaid-markdown-wrap
      shell: bash
      env:
        PR_COMMENT_MODE: ${{ inputs.pr-comment-mode }}
        GITHUB_TOKEN: ${{ github.token }}
        GITHUB_EVENT_NAME: ${{ github.event_name }}
      run: |
        # Build CLI arguments
        args=()
        args+=("${{ inputs.input }}")
        
        # Add optional arguments
        [[ -n "${{ inputs.out-dir }}" ]] && args+=(--out-dir "${{ inputs.out-dir }}")
        [[ -n "${{ inputs.header }}" ]] && args+=(--header "${{ inputs.header }}")
        [[ -n "${{ inputs.footer }}" ]] && args+=(--footer "${{ inputs.footer }}")
        [[ -n "${{ inputs.config }}" ]] && args+=(--config "${{ inputs.config }}")
        
        # Add boolean flags
        [[ "${{ inputs.remove-source }}" == "true" ]] && args+=(--remove-source)
        [[ "${{ inputs.show-command }}" == "false" ]] && args+=(--no-show-command)
        
        # Execute using the unified runner script
        node ${{ github.action_path }}/scripts/github-action-runner.js "${args[@]}"
    
    # PR comments are now handled within the unified runner script